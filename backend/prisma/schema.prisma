generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model classtime {
  id               Int                @id
  hour             DateTime           @db.Date
  dayweek          String             @db.VarChar(255)
  classtimestudent classtimestudent[]
}

model classtimestudent {
  id          Int       @id
  classtimeid Int
  studentid   Int
  classtime   classtime @relation(fields: [classtimeid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student     student   @relation(fields: [studentid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model nivel {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdat DateTime? @db.Date
  updatedat DateTime? @db.Date
  student   student[]
  unit      unit[]
}

model student {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  age              Int
  nivelid          Int
  createdat        DateTime?          @db.Date
  updatedat        DateTime?          @db.Date
  classtimestudent classtimestudent[]
  observation      observation[]
  nivel            nivel              @relation(fields: [nivelid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  unit             unit[]
  unitstudent      unitstudent[]
  userstudent      userstudent[]
}

model teacher {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  email       String        @db.VarChar(255)
  password    String        @db.VarChar(255)
  createdat   DateTime?     @db.Date
  updatedat   DateTime?     @db.Date
  userstudent userstudent[]
}

model unit {
  id          Int           @id
  name        String        @db.VarChar(255)
  nivelid     Int
  studentid   Int
  nivel       nivel         @relation(fields: [nivelid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student     student       @relation(fields: [studentid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  unitstudent unitstudent[]
}

model userstudent {
  id        Int     @id
  teacherid Int
  studentid Int
  student   student @relation(fields: [studentid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teacher   teacher @relation(fields: [teacherid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model observation {
  id          Int     @id
  description String  @db.VarChar(255)
  studentid   Int
  student     student @relation(fields: [studentid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model unitstudent {
  id        Int     @id
  unitid    Int
  studentid Int
  student   student @relation(fields: [studentid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  unit      unit    @relation(fields: [unitid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
