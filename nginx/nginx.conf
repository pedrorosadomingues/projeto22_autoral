server {
    listen 80;
    listen 443 ssl;

    ssl_certificate /certs/cert.pem;
    ssl_certificate_key /certs/key.pem;

 location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://next-app:3000/;
  }

    location /api/ {
      # informações do request que estão sendo passadas, 
		  # não precisa disso para funcionar, mas pode ser necessário
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      
      # app ao invés de localhost por conta da network criada pelo docker
      proxy_pass http://ec2-3-93-239-69.compute-1.amazonaws.com/;
    }
 }

 server {
    listen 80;
    listen 443 ssl;

    ssl_certificate /certs/cert.pem;
    ssl_certificate_key /certs/key.pem;

  location / {
    proxy_pass             http://next-app:3000;
    proxy_read_timeout     60;
    proxy_connect_timeout  60;
    proxy_redirect         off;

    # Allow the use of websockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
  
  location /_next/static {
        add_header Cache-Control "public, max-age=3600, immutable";
        proxy_pass http://next-app:3000/_next/static;
  }
  
  location ~ /.well-known {
    allow all;
  }
  
  location /api/ {
      # informações do request que estão sendo passadas, 
		  # não precisa disso para funcionar, mas pode ser necessário
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      
      # app ao invés de localhost por conta da network criada pelo docker
      proxy_pass http://ec2-3-93-239-69.compute-1.amazonaws.com/api;
    }
 }
